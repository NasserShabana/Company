@model SignINViewModel
@{
    ViewData["Title"] = "SignIn";
    Layout = "~/Views/Shared/_AuthLayout.cshtml";
}

<!-- Include Font Awesome for icons -->
 
<style>
    /* Custom styles for input fields */
    .text,
    .login-button {
        width: 100%; /* Full width for both inputs and button */
        padding: 10px; /* Padding for comfort */
        margin: 10px 0; /* Spacing between fields */
        border: 1px solid none; /* Border styling */
        border-radius: 5px; /* Rounded corners */
        font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
        box-sizing: border-box; /* Include padding and border in element's total width and height */
    }

        .text:focus {
            border-color: white; /* Change border color on focus */
            outline: none; /* Remove default outline */
        }

    .w3lpass {
        position: relative; /* Position for password visibility toggle */
    }

    .toggle-password {
        position: absolute;
        right: 37px;
        top: 50%;
        transform: translateY(-50%);
        cursor: pointer;
        color: white; /* Icon color */
        font-size: 18px; /* Icon size */
    }

    .alert {
        color: red; /* Error message color */
        margin: 10px 0; /* Space above and below */
    }

    h1 {
        font-size: 3.5em; /* Font size */
        color: white; /* Dark color for contrast */
        text-align: center; /* Center align the text */
        margin-bottom: 20px; /* Space below the heading */
        font-family: 'Arial', sans-serif; /* Font family */
        letter-spacing: 2px; /* Spacing between letters */
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1); /* Subtle shadow for depth */
    }

    /* Button styling */
    .login-button {
        background-color: #007BFF; /* Default background color */
        color: white; /* Text color */
        font-size: 1.5em; /* Font size */
        font-weight: bold; /* Make text bold */
        cursor: pointer; /* Change cursor on hover */
        transition: background-color 0.3s ease; /* Smooth transition for hover effect */
    }

        .login-button:hover {
            background-color: #0056b3; /* Darker background on hover */
        }

    /* Additional animation */
    .fade-in {
        opacity: 0; /* Start invisible */
        transition: opacity 1s ease-in-out; /* Transition for fade effect */
    }

        .fade-in.visible {
            opacity: 1; /* Fully visible */
        }

</style>
<br />
<br />

<h1 class="fade-in">Login</h1>

<div class="main-agileinfo">
    @if (ViewData.ModelState.IsValid == false)
    {
        <div asp-validation-summary="All" class="alert alert-danger"></div>
    }
    <div class="agileits-top">

        <form asp-action="SignIn" method="post">
            <br />
            <input class="text" asp-for="Email" placeholder="Email" required=""><br />
            <div class="w3lpass">
                <input type="password" asp-for="Password" id="password" placeholder="Password" required="" class="text">
                <span class="toggle-password" onclick="togglePasswordVisibility()">
                    <i class="fas fa-eye"></i>
                </span>
            </div><br />

            <div class="wthree-text">
                <label class="anim">
                    <input asp-for="RememberMe" class="checkbox" style="width: auto; margin-right: 10px;  ">
                    <span>Remember Me</span>
                </label>
                <div class="clear"></div>
            </div>
            <br />
            <input type="submit" value="Login" class="login-button">
        </form>
        <p>Don't have an Account? <a asp-action="SignUp"> Register Now!</a></p>
        <p><a asp-action="ForgetPassword"> Forget Password?</a></p>
    </div>
</div>

<script>
    // Wait for the DOM to fully load before applying the visible class
    document.addEventListener("DOMContentLoaded", function () {
        const heading = document.querySelector('.fade-in');
        heading.classList.add('visible'); // Add the class to trigger the transition
    });

    function togglePasswordVisibility() {
        const passwordInput = document.getElementById('password');
        const toggleIcon = document.querySelector('.toggle-password i');

        if (passwordInput.type === "password") {
            passwordInput.type = "text";
            toggleIcon.classList.remove('fa-eye');
            toggleIcon.classList.add('fa-eye-slash'); // Change icon when visible
        } else {
            passwordInput.type = "password";
            toggleIcon.classList.remove('fa-eye-slash');
            toggleIcon.classList.add('fa-eye'); // Change back to original icon
        }
    }
</script>
